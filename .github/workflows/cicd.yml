name: Build and Deploy 3-Tier Web App
on:
  push:
    branches: [ "main" ]
    paths:
      - 'api/**'
      - 'web/**'

permissions:
  id-token: write
  contents: read

jobs:
  prepare:
    name: Get changed paths
    runs-on: ubuntu-latest
    outputs:
      changed_paths: ${{ steps.changed_paths.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed paths
        id: changed_paths
        uses: dorny/paths-filter@v3
        with:
          filters: |
            api:
              - 'api/**/*'
            web:
              - 'web/**/*'

  build-deploy:
    name: Build and deploy to EKS
    needs: prepare
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false
    if: ${{ needs.prepare.outputs.changed_paths }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: ${{ fromJson(needs.prepare.outputs.changed_paths) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
        with:
          mask-password: 'true'

      - uses: unfor19/install-aws-cli-action@v1

      - uses: azure/setup-kubectl@v3

      - uses: azure/setup-helm@v4.2.0

      - name: Build and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: 3tier-${{ matrix.path }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd ${{ matrix.path }}
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to EKS
        env:
          EKS_CLUSTER: 3tier-app
          IMAGE_TAG: ${{ github.sha }}
          APP: ${{ matrix.path }}
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER
          helm -n prod upgrade \
            --debug \
            --install \
            --atomic \
            --wait \
            --reuse-values \
            tier-app deploy/helm/3tier-app2 \
            --set $APP.image.tag=$IMAGE_TAG
